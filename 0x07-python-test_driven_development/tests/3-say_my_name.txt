==========================
Doctest for 2. Say my name
==========================

This module defines a Say my name function ```def say_my_name(first_name, last_name=""):```.

# USAGE
========

* ```def say_my_name(first_name, last_name=""):``` prints My name is <first name> <last name>

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("John", "Smith")
    My name is John Smith

* The second argument (last_name) is optional; by default, it is an empty string ""
::

    >>> say_my_name("Bob") #doctest: +NORMALIZE_WHITESPACE
    My name is Bob

* first_name and last_name must be strings otherwise, raise a TypeError exception
::

    >>> say_my_name(12, "White")
    Traceback (most recent call last):
    TypeError: first_name must be a string
    >>> say_my_name("John", ["Smith"])
    Traceback (most recent call last):
    TypeError: last_name must be a string
    >>> say_my_name(12, 23)
    Traceback (most recent call last):
    TypeError: first_name must be a string
    >>> say_my_name(["John", "Smith"])
    Traceback (most recent call last):
    TypeError: first_name must be a string

* The function requires at least 1 argumemnt first_name to work
::
    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
